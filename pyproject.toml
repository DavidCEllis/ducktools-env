[build-system]
requires = [
    "setuptools>=64",
    "setuptools-scm>=8",
]
build-backend = "setuptools.build_meta"

[project]
name="ducktools-env"
description="Virtual environment management tools and application bundle builder"
authors = [
  { name="David C Ellis" },
]
readme="README.md"
requires-python = ">=3.8"
dependencies = [
    "ducktools-classbuilder>=0.6.3",
    "ducktools-lazyimporter",
    "ducktools-scriptmetadata",
    "ducktools-pythonfinder",
    "tomli; python_version <= '3.10'",
    "packaging~=23.2",
]
classifiers = [
    "Development Status :: 1 - Planning",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: MIT License",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
]
dynamic = ["version"]

[project.optional-dependencies]
testing = ["pytest", "pytest-cov", "coverage-conditional-plugin"]

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools_scm]
version_file = "src/ducktools/env/_version.txt"

[tool.pytest.ini_options]
addopts= "--cov=src/ --cov-report=term-missing"
testpaths = [
    "tests",
]

[tool.coverage.run]
plugins = ["coverage_conditional_plugin"]

[tool.coverage.coverage_conditional_plugin.rules]
# This tool works backwards - it really means no cover if <condition>
skip-if-os-win32 = "sys_platform == 'win32'"
skip-if-os-other = "sys_platform != 'win32'"

